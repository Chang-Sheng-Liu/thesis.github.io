digraph "flexran_agent_async_channel_t"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{flexran_agent_async\l_channel_t\n|+ enb_id\l|}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +receive_queue\n+send_queue" ,arrowhead="odiamond",fontname="Helvetica"];
  Node2 [label="{message_queue_t\n|+ count\l+ mutex\l+ cond\l+ exit\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structmessage__queue__t.html",tooltip=" "];
  Node3 -> Node2 [color="grey25",fontsize="10",style="solid",label=" +head\n+tail" ,arrowhead="odiamond",fontname="Helvetica"];
  Node3 [label="{message_t\n|+ data\l+ size\l+ priority\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structmessage__t.html",tooltip=" "];
  Node4 -> Node3 [color="grey25",fontsize="10",style="solid",label=" +next" ,arrowhead="odiamond",fontname="Helvetica"];
  Node4 [label="{struct\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structstruct.html",tooltip="holds vehicle id and initial pointer to the head of the linked list in hastable"];
  Node4 -> Node2 [color="grey25",fontsize="10",style="solid",label=" +ps\n+ringbuffer_array\n+ringbuffer_state" ,arrowhead="odiamond",fontname="Helvetica"];
  Node5 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +link" ,arrowhead="odiamond",fontname="Helvetica"];
  Node5 [label="{socket_link_t\n|+ socket_fd\l+ type\l+ bytes_sent\l+ packets_sent\l+ bytes_received\l+ packets_received\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structsocket__link__t.html",tooltip=" "];
  Node6 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +manager" ,arrowhead="odiamond",fontname="Helvetica"];
  Node6 [label="{link_manager_t\n|+ peer_addr\l+ peer_port\l+ sender\l+ receiver\l+ run\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structlink__manager__t.html",tooltip=" "];
  Node2 -> Node6 [color="grey25",fontsize="10",style="solid",label=" +receive_queue\n+send_queue" ,arrowhead="odiamond",fontname="Helvetica"];
  Node5 -> Node6 [color="grey25",fontsize="10",style="solid",label=" +socket_link" ,arrowhead="odiamond",fontname="Helvetica"];
}
